# Global configuration

image:
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry:

nameOverride: ""
fullnameOverride: ""

httpPort: "4000"
replPort: "7375" # NOTE: cannot currently be changed

replicas: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/path: /prometheus
  prometheus.io/port: "4000"
  prometheus.io/scrape: "true"

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
# tls:
#   secretName:

nodeSelector: {}

tolerations: []

affinity: {}

domain: localhost
tenantId:
timezone: America/Los_Angeles

# microservice-specific configuration
# most global parameters can be overridden here (e.g. resources, autoscaling)

deployments:
  mds-agency:
    enabled: false
    pathPrefix: /agency
  mds-attachment-service:
    enabled: false
  mds-audit-api:
    enabled: false
    pathPrefix: /audit
  mds-audit-service:
    enabled: false
  mds-collector-api:
    enabled: false
    pathPrefix: /collector
  mds-collector-service:
    enabled: false
  mds-compliance-api:
    enabled: false
    pathPrefix: /compliance
  mds-compliance-service:
    enabled: false
  mds-geography-api:
    enabled: false
    pathPrefix: /geography
  mds-geography-author-api:
    enabled: false
    pathPrefix: /geography-author
  mds-geography-service:
    enabled: false
  mds-ingest-service:
    enabled: false
  mds-jurisdiction-api:
    enabled: false
    pathPrefix: /jurisdiction
  mds-jurisdiction-service:
    enabled: false
  mds-policy:
    enabled: false
    pathPrefix: /policy
  mds-policy-author-api:
    enabled: false
    pathPrefix: /policy-author
  mds-policy-service:
    enabled: false
  mds-provider-service:
    enabled: false
  mds-transaction-api:
    enabled: false
    pathPrefix: /transaction
  mds-transaction-service:
    enabled: false

#
# Backend services

nats:
  internal: true
  host:
  auth:
    enabled: false
  podAnnotations:
    sidecar.istio.io/inject: "false"

kafka:
  internal: true
  host:
  port: 9092
  podAnnotations:
    sidecar.istio.io/inject: "false"

postgresql:
  internal: true
  host:
  hostReader:
  port: 5432
  existingSecret: mds-secrets
  password: CHANGEME
  postgresqlUsername: mdsadmin
  postgresqlDatabase: mds
  image:
    repository: postgres
    tag: 10

redis:
  internal: true
  host:
  port: 6379
  usePassword: false
  password:
  cluster:
    enabled: false
  master:
    disableCommands: []
  slave:
    disableCommands: []
